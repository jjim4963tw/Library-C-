<Window x:Class="LibraryWPF.View.RoundButtonView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:model="clr-namespace:LibraryWPF.ViewModel"
        mc:Ignorable="d"
        Title="RoundButtonView"
        Height="450"
        Width="800">

    <Window.DataContext>
        <model:RoundButtonViewModel />
    </Window.DataContext>

    <Window.Resources>
        <!-- 按鈕取得焦點變化顏色 -->
        <Style x:Key="ButtonHighlightBackground"
               TargetType="{x:Type Button}">

            <Setter Property="Background"
                    Value="{Binding ButtonBackground}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="{Binding ButtonHighlightBackground}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 背景圓形樣式 -->
        <Style x:Key="RoundImageButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="ContentTemplate"
                    Value="{DynamicResource Unpressed}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#ECF3FF" />
                    <Setter Property="ContentTemplate"
                            Value="{DynamicResource Pressed}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid>
        <Button Style="{StaticResource RoundImageButtonStyle}"
                Width="40"
                Height="40"
                Margin="30, 30, 0, 0"
                Padding="5"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                BorderThickness="0"
                Grid.Column="1">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius"
                            Value="14" />
                </Style>

                <DataTemplate x:Key="Unpressed">
                    <Image Source="../Resources/icon_back.png"
                           RenderOptions.BitmapScalingMode="Fant" />
                </DataTemplate>
                <DataTemplate x:Key="Pressed">
                    <Image Source="../Resources/icon_back_focus.png"
                           RenderOptions.BitmapScalingMode="Fant" />
                </DataTemplate>
            </Button.Resources>
        </Button>

        <Button Content="圓角按鈕"
                Style="{StaticResource ButtonHighlightBackground}"
                Padding="10"
                Margin="100,0,100,30"
                Foreground="{Binding ButtonTextColor}"
                VerticalAlignment="Bottom"
                BorderThickness="{Binding ButtonBorderThickness}"
                BorderBrush="{Binding ButtonBorderBackground}">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius"
                            Value="{Binding ButtonCornerRadius}" />
                </Style>
            </Button.Resources>
        </Button>
    </Grid>
</Window>
